name: Test code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-matrix: ${{ steps.get-python-versions-action.outputs.latest-python-versions }}
    steps:
    - uses: snok/latest-python-versions@v1
      id: get-python-versions-action
      with:
        min-version: '3.8'
        include-prereleases: true

  test:
    needs: get-python-versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
        L: [10, 20]
        n: [10000, 20000, 30000]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install matplotlib
    - name: Run Ising Model Simulation
      run: |
        python ising_model.py ${{ matrix.L }} ${{ matrix.n }} > results_${{ matrix.python-version }}_L${{ matrix.L }}_n${{ matrix.n }}.txt
    - name: Generate plots
      run: python generate_plots.py
    - name: Update index.html
      run: python update_index.py
    - name: Commit results
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add results*.txt
        git add *.png
        git add index.html
        git commit -m "Add simulation results" || echo "No changes to commit"
        git push
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
